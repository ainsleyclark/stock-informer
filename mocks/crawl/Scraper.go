// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Scraper is an autogenerated mock type for the Scraper type
type Scraper struct {
	mock.Mock
}

// Scrape provides a mock function with given fields: url, selector
func (_m *Scraper) Scrape(url string, selector string) (string, error) {
	ret := _m.Called(url, selector)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(url, selector)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(url, selector)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewScraper interface {
	mock.TestingT
	Cleanup(func())
}

// NewScraper creates a new instance of Scraper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewScraper(t mockConstructorTestingTNewScraper) *Scraper {
	mock := &Scraper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
